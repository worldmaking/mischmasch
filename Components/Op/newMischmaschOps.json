{
    "abs": {
        "classification": "mathemagical",
        "inputs": {
            "value": {
                "info": "input value",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "abs": "absolute value of input"
        }
    },
    "round": {
        "classification": "mathemagical",
        "inputs": {
            "input": {
                "info": "value to round",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "base": {
                "info": "round to a multiple of",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "rounded input"
        }
    },
    "param": {
        "classification": "parameter",
        "inputs": {},
        "outputs": {
            "value": "parameter value"
        }
    },
    "add": {
        "classification": "mathemagical",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    -1,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 0,
                "range": [
                    0,
                    100
                ],
                "kind": "knob"
            }
        },
        "outputs": {
            "sum": "in1 + in2"
        }
    },
    "sub": {
        "classification": "mathemagical",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "difference": "in1 - in2"
        }
    },
    "mul": {
        "classification": "mathemagical",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    -1,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 1,
                "range": [
                    0,
                    1
                ],
                "kind": "knob"
            }
        },
        "outputs": {
            "product": "in1 * in2"
        }
    },
    "div": {
        "classification": "mathemagical",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "quotient": "in1 / in2"
        }
    },
    "accum": {
        "classification": "integrator",
        "inputs": {
            "increment": {
                "info": "The amount to increase the accumulatorâ€™s internal value by on each sample",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "reset": {
                "info": "When reset has a value of 1, the accumulator will reset its internal value to 0.",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "accum() is used to increment a stored value between a provided range that defaults to {0,1}. If the accumulator values passes its maximum, it wraps. accum() is very similar to the counter ugen, but is slightly more efficient. Additionally, the min and max properties of accum are fixed values, while they can be specified with signals in counter."
        }
    },
    "counter": {
        "classification": "integrator",
        "inputs": {
            "max": {
                "info": "count limit (zero means no limit)",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "reset": {
                "info": "non-zero value resets the count",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "incr": {
                "info": "amount to add per sample",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "running total",
            "out2": "carry flag (counter hit maximum)",
            "out3": "carry count"
        }
    },
    "sin": {
        "classification": "mathemagical",
        "inputs": {
            "value": {
                "info": "input value",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "sin(input)"
        }
    },
    "cos": {
        "classification": "mathemagical",
        "inputs": {
            "value": {
                "info": "input value",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "cos(input)"
        }
    },
    "tan": {
        "classification": "mathemagical",
        "inputs": {
            "value": {
                "info": "input value",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "tan(input)"
        }
    },
    "tanh": {
        "classification": "mathemagical",
        "inputs": {
            "value": {
                "info": "input value",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "tanh(input)"
        }
    },
    "asin": {
        "classification": "mathemagical",
        "inputs": {
            "value": {
                "info": "input value",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "angle(radians)"
        }
    },
    "acos": {
        "classification": "mathemagical",
        "inputs": {
            "value": {
                "info": "input value",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "angle(radians)"
        }
    },
    "atan": {
        "classification": "mathemagical",
        "inputs": {
            "value": {
                "info": "input value",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "angle(radians)"
        }
    },
    "phasor": {
        "classification": "source",
        "inputs": {
            "freq": {
                "info": "frequency",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "reset": {
                "info": "a non-zero value will reset the phase to the initial value",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "phase (0..1)"
        }
    },
    "data": {
        "classification": "source",
        "inputs": {
            "channels": {
                "info": "number of data buffer channels",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "dim": {
                "info": "size of data buffer",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "name": {
                "info": "name of data buffer",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "length in samples",
            "out2": "number of channels"
        }
    },
    "peek": {
        "classification": "source",
        "inputs": {
            "wave_phase": {
                "info": "phase to read (between start and end indices)",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "phase": {
                "info": "phase to read (between 0 and 1)",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "wave_start": {
                "info": "wave start index (samples)",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "index": {
                "info": "sample index to read",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "signal": {
                "info": "value to lookup (between -1 and 1)",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "channel_offset": {
                "info": "channel_offset (zero-based)",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "name": {
                "info": "name of buffer",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "wave_end": {
                "info": "wave end index (samples)",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "sampled value",
            "out2": "index (in samples)"
        }
    },
    "cycle": {
        "classification": "source",
        "inputs": {
            "freq": {
                "info": "wave frequency",
                "value": 0,
                "range": [
                    0.1,
                    1000
                ],
                "kind": "knob"
            },
            "reset": {
                "info": "hard sync",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "sinusoid": "interpolated waveform"
        }
    },
    "history": {
        "classification": "delay",
        "inputs": {
            "name": {
                "info": "History name",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value": {
                "info": "set the next value (for feedback circuits)",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "previous value"
        }
    },
    "delta": {
        "classification": "filtering",
        "inputs": {
            "input": {
                "info": "value to differentiate",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "differential of input (difference from previous input)"
        }
    },
    "floor": {
        "classification": "mathemagical",
        "inputs": {
            "value": {
                "info": "input value",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "input rounded down"
        }
    },
    "ceil": {
        "classification": "mathemagical",
        "inputs": {
            "value": {
                "info": "input value",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "input rounded up"
        }
    },
    "min": {
        "classification": "mathemagical",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "min(in1,in2)"
        }
    },
    "max": {
        "classification": "mathemagical",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "max(in1,in2)"
        }
    },
    "sign": {
        "classification": "mathemagical",
        "inputs": {
            "value": {
                "info": "input value",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "sign of input"
        }
    },
    "dcblock": {
        "classification": "filtering",
        "inputs": {
            "input": {
                "info": "input to filter",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "filtered output"
        }
    },
    "rate": {
        "classification": "source",
        "inputs": {
            "multiplier": {
                "info": "multiplier to scale phase by",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "phase": {
                "info": "phase to be scaled (0 to 1)",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "ramp cycle (0 to 1)"
        }
    },
    "wrap": {
        "classification": "scaling",
        "inputs": {
            "input": {
                "info": "input to wrap",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "min": {
                "info": "lower bound",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "max": {
                "info": "upper bound",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "wrapped input"
        }
    },
    "mix": {
        "classification": "switching",
        "inputs": {
            "loval": {
                "info": "output if interp is 0",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "hival": {
                "info": "output if interp is 1",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "interp": {
                "info": "interpolation factor between inputs",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "interpolated result"
        }
    },
    "clamp": {
        "classification": "scaling",
        "inputs": {
            "input": {
                "info": "input to clamp",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "min": {
                "info": "lower bound",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "max": {
                "info": "upper bound",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "clamped": "clamped input"
        }
    },
    "poke": {
        "classification": "source",
        "inputs": {
            "phase": {
                "info": "index to write (0-1 phase over buffer)",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "overdub": {
                "info": "overdub mix: amount of original signal to preserve",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value": {
                "info": "value to write",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "channel": {
                "info": "channel to write (zero-based)",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "name": {
                "info": "name of buffer",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "position": {
                "info": "position to write (units depend on @index attribute)",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {}
    },
    "delay": {
        "classification": "delay",
        "inputs": {
            "in": {
                "info": "the signal to be delayed",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "knob"
            },
            "reset": {
                "info": "The amount of time to delay the incoming signal.",
                "value": 512,
                "range": [
                    1,
                    44100
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "signal output"
        }
    },
    "fold": {
        "classification": "scaling",
        "inputs": {
            "input": {
                "info": "input to fold",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "min": {
                "info": "lower bound",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "max": {
                "info": "upper bound",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "folded input"
        }
    },
    "mod": {
        "classification": "mathemagical",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "modulo": "mod(in1,in2)"
        }
    },
    "sah": {
        "classification": "filtering",
        "inputs": {
            "input": {
                "info": "input to sample",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "control": {
                "info": "control signal",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "thresh": {
                "info": "threshold",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "current or previous"
        }
    },
    "noise": {
        "classification": "source",
        "inputs": {},
        "outputs": {
            "random-stream": "random numbers"
        }
    },
    "not": {
        "classification": "switching",
        "inputs": {
            "value": {
                "info": "input value",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "boolean (0 or 1)"
        }
    },
    "gt": {
        "classification": "mathemagical",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "boolean (0 or 1)"
        }
    },
    "gte": {
        "classification": "mathemagical",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "boolean (0 or 1)"
        }
    },
    "lt": {
        "classification": "mathemagical",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "boolean (0 or 1)"
        }
    },
    "lte": {
        "classification": "mathemagical",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "boolean (0 or 1)"
        }
    },
    "bool": {
        "classification": "switching",
        "inputs": {
            "value": {
                "info": "input value",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "bool": "boolean (0 or 1)"
        }
    },
    "gate": {
        "classification": "switching",
        "inputs": {
            "input": {
                "info": "input to pass through the gate",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "choose": {
                "info": "choose which output to forward to",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "value": "permitted value"
        }
    },
    "train": {
        "classification": "source",
        "inputs": {
            "onset": {
                "info": "onset phase",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "width": {
                "info": "pulse width",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "period": {
                "info": "period (samples)",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "pulse train"
        }
    },
    "slide": {
        "classification": "filtering",
        "inputs": {
            "input": {
                "info": "input to filter",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "up": {
                "info": "slide up value (samples)",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "down": {
                "info": "slide down value (samples)",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "filtered output"
        }
    },
    "in": {
        "classification": "throughput",
        "inputs": {},
        "outputs": {
            "value": "input value"
        }
    },
    "t60": {
        "classification": "mathemagical",
        "inputs": {
            "time": {
                "info": "time (samples) to decay by 60 dB",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "sample-rate multiplier"
        }
    },
    "mtof": {
        "classification": "conversion",
        "inputs": {
            "note": {
                "info": "MIDI note number",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "tuning": {
                "info": "tuning base in Hz",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "frequency in Hz"
        }
    },
    "ltp": {
        "classification": "mathemagical",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "in1 or 0"
        }
    },
    "gtp": {
        "classification": "mathemagical",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "in1 or 0"
        }
    },
    "switch": {
        "classification": "switching",
        "inputs": {
            "iffalse": {
                "info": "value if false",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "iftrue": {
                "info": "value if true",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "condition": {
                "info": "condition to test",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "result"
        }
    },
    "mstosamps": {
        "classification": "conversion",
        "inputs": {
            "period": {
                "info": "period in milliseconds",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "period in samples"
        }
    },
    "pow": {
        "classification": "mathemagical",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "sign of input"
        }
    },
    "and": {
        "classification": "switching",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "boolean (0 or 1)"
        }
    },
    "eq": {
        "classification": "mathemagical",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "boolean (0 or 1)"
        }
    },
    "neq": {
        "classification": "mathemagical",
        "inputs": {
            "value1": {
                "info": "input value 1",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            },
            "value2": {
                "info": "input value 2",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "boolean (0 or 1)"
        }
    },
    "exp": {
        "classification": "mathemagical",
        "inputs": {
            "value": {
                "info": "input value",
                "value": 0,
                "range": [
                    0,
                    1
                ],
                "kind": "inlet"
            }
        },
        "outputs": {
            "out1": "exp(in1)"
        }
    }
}